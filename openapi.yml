openapi: 3.0.0
info:
  title: User Registration
  description: Exposes User Registration APIs.
  version: 1.0.0
servers:
  - url: http://localhost:5000/api/users

paths:
  '/':
    post:
      tags:
        - Create User
      description: |-
        Registers a user
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserData'
      responses:
        201:
          description: Successful registration
        400:
          description: User already exists or invalid input
    get:
      tags:
        - Get User
      description: |-
        Lists all registered users
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                  - type: array
                    items:
                      $ref: '#/components/schemas/GetUserData'
        500:
          description: Server error

  '/{id}':
    get:
      tags:
        - Get User
      description: |-
        Retrieves a user
      parameters:
        - name: id
          description: Unique identifier for the patient.
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserData'
        400:
          description: User not found
    put:
      tags:
        - Update User
      description: |-
        Updates a user
      parameters:
        - name: id
          description: Unique identifier for the patient.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          'application/json':
            schema:
              $ref: '#/components/schemas/UserData'
      responses:
        200:
          description: User updated successfully
        400:
          description: User not found
    delete:
      tags:
        - Delete User
      description: |-
        Deletes a user
      parameters:
        - name: id
          description: Unique identifier for the patient.
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: User deleted successfully
        400:
          description: User not found
      
components:
  schemas:
    UserData:
      type: object
      properties:
        name:
          type: string
          example: John Doe
        age:
          type: integer
          example: 25
        dob:
          type: string
          example: "2000-01-01"
          format: date
        password:
          type: string
          example: "password123"
        cpswd:
          type: string
          example: "password123"
        gender:
          type: string
          example: "Male"
        about:
          type: string
          example: "I am a software developer"
    GetUserData:
        type: object
        properties:
          _id:
            type: string
            example: "unique-id-123"
          name:
            type: string
            example: John Doe
          age:
            type: integer
            example: 25
          dob:
            type: string
            example: "2000-01-01"
            format: date
          password:
            type: string
            example: "password123"
          cpswd:
            type: string
            example: "password123"
          gender:
            type: string
            example: "Male"
          about:
            type: string
            example: "I am a software developer"
    GetUserData:
      type: array
      items:
          $ref: '#/components/schemas/GetUserData'
    
